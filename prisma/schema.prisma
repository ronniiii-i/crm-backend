generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String?
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  contacts  Contact[]
  projects  Project[]
  tasks     Task[]    @relation("TaskAssignments")

  @@index([createdAt])
  @@index([email])
  @@map("users")
}

enum Role {
  ADMIN
  USER
  MANAGER
}

model Contact {
  id        String    @id @default(uuid())
  firstName String
  lastName  String
  email     String?   @unique
  phone     String?
  company   String?
  notes     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  createdBy User      @relation(fields: [userId], references: [id])
  userId    String
  projects  Project[] @relation("ProjectContacts") // Fixed relation name consistency

  @@index([firstName, lastName])
  @@index([userId])
  @@index([email])
}

model Project {
  id          String        @id @default(uuid())
  name        String
  description String?
  status      ProjectStatus @default(ACTIVE)
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  createdBy   User          @relation(fields: [userId], references: [id])
  userId      String        // Fixed typo from "Strin"
  contacts    Contact[]     @relation("ProjectContacts") // Fixed relation name
  tasks       Task[]

  @@index([userId])
  @@index([status])
  @@index([startDate])
}

enum ProjectStatus {
  ACTIVE
  COMPLETED
  ARCHIVED
  ON_HOLD
}

model Task {
  id           String    @id @default(uuid())
  title        String    // Fixed typo from "Strin"
  description  String?
  dueDate      DateTime?
  completed    Boolean   @default(false)
  priority     Priority  @default(MEDIUM)
  createdAt    DateTime  @default(now())
  project      Project   @relation(fields: [projectId], references: [id])
  projectId    String
  assignedTo   User?     @relation("TaskAssignments", fields: [assignedToId], references: [id])
  assignedToId String?

  @@index([projectId])
  @@index([assignedToId])
  @@index([dueDate])
  @@index([completed])
  @@index([priority])
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}